{"version":3,"file":"static/js/535.560d061d.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","webpack://phonebook-app/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","webpack://phonebook-app/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://phonebook-app/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://phonebook-app/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook-app/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, myFilter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(myFilter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const phoneInputId = nanoid();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (\n      contacts.find(\n        contact => name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.info(`${name} is already in contacts :)`, {\n        position: 'center-top',\n        timeout: 5000,\n      });\n      form.reset();\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formLabel} htmlFor={nameInputId}>\n        Name\n      </label>\n      <input\n        className={css.formInput}\n        type=\"text\"\n        pattern=\"[a-zA-Z\\s'\\-]*\"\n        name=\"name\"\n        placeholder=\"Enter contact name\"\n        id={nameInputId}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label className={css.formLabel} htmlFor={phoneInputId}>\n        Number\n      </label>\n      <input\n        className={css.formInput}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter phone number\"\n        id={phoneInputId}\n        pattern=\"[0-9\\s\\-]+\"\n        title=\"Phone number must be digits and can contain spaces and dashes\"\n        required\n      />\n      <button className={css.formButton} type=\"submit\">\n        <span>Add contact</span>\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItemText\":\"ContactListItem_listItemText__vCiNZ\",\"listItem\":\"ContactListItem_listItem__upGA2\",\"deleteBtn\":\"ContactListItem_deleteBtn__roUYm\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactListItem = ({ contact }) => {\n  const { name, number, id } = contact;\n\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <li className={css.listItem}>\n      <span className=\"material-symbols-outlined\">contacts_product</span>\n      <span className={css.listItemText}>\n        {name}: {number}\n      </span>\n      <button type=\"button\" className={css.deleteBtn} onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(contact => (\n        <ContactListItem contact={contact} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\",\"inputBorder\":\"Filter_inputBorder__U0k87\",\"filter\":\"Filter_filter__vxThR\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filterInputId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label className={css.filterLabel} htmlFor={filterInputId}>\n        Find contact by name\n      </label>\n      <div className={css.inputBorder}>\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n          id={filterInputId}\n          onChange={handleFilterChange}\n        />\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContentBox\":\"Contacts_ContentBox__RnSD3\",\"InProgress\":\"Contacts_InProgress__C0ykW\"};","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Contacts.module.css';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from '../../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.ContentBox}>\n      <Helmet>\n        <title>Your Phonebook</title>\n      </Helmet>\n\n      <h2>Add contacts to your Phonebook</h2>\n      <ContactForm />\n\n      {contacts.length !== 0 ? (\n        <>\n          <h2>Your contacts</h2>\n          <Filter />\n          {isLoading && !error && (\n            <div className={css.InProgress}>\n              <b>Request in progress...</b>\n              <Loader />\n            </div>\n          )}\n          <ContactList />\n        </>\n      ) : (\n        <>\n          <h2>Your Phonebook is empty</h2>\n          <h3>Add some contacts above</h3>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","myFilter","contact","toLowerCase","includes","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","dispatch","useDispatch","useSelector","nameInputId","phoneInputId","_jsxs","className","css","onSubmit","event","preventDefault","form","target","elements","number","Notiflix","position","timeout","reset","addContact","children","_jsx","htmlFor","type","pattern","placeholder","title","required","ContactListItem","_ref","onClick","deleteContact","ContactList","filteredContacts","Filter","filterInputId","onChange","setFilter","Contacts","useEffect","fetchContacts","Helmet","_Fragment","Loader"],"sourceRoot":""}